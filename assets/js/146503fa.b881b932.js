"use strict";(self.webpackChunkodo_dev=self.webpackChunkodo_dev||[]).push([[3229],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return u}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=o.createContext({}),c=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},s=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=c(t),u=r,y=s["".concat(p,".").concat(u)]||s[u]||m[u]||a;return t?o.createElement(y,i(i({ref:n},d),{},{components:t})):o.createElement(y,i({ref:n},d))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=s;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}s.displayName="MDXCreateElement"},1997:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),i=["components"],l={title:"odo deploy",sidebar_position:4},p={unversionedId:"command-reference/deploy",id:"command-reference/deploy",isDocsHomePage:!1,title:"odo deploy",description:"odo can be used to deploy components in a similar manner they would be deployed by a CI/CD system,",source:"@site/docs/command-reference/deploy.md",sourceDirName:"command-reference",slug:"/command-reference/deploy",permalink:"/docs/command-reference/deploy",editUrl:"https://github.com/redhat-developer/odo/edit/main/website/docs/command-reference/deploy.md",version:"current",sidebarPosition:4,frontMatter:{title:"odo deploy",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"odo create",permalink:"/docs/command-reference/create"},next:{title:"odo link",permalink:"/docs/command-reference/link"}},c=[],d={toc:c};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"odo can be used to deploy components in a similar manner they would be deployed by a CI/CD system,\nby first building the images of the containers to deploy, then by deploying the Kubernetes resources\nnecessary to deploy the components."),(0,a.kt)("p",null,"When running the command ",(0,a.kt)("inlineCode",{parentName:"p"},"odo deploy"),", odo searches for the default command of kind ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy")," in the devfile, and executes this command.\nThe kind ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy")," is supported by the devfile format starting from version 2.2.0."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy")," command is typically a ",(0,a.kt)("em",{parentName:"p"},"composite")," command, composed of several ",(0,a.kt)("em",{parentName:"p"},"apply")," commands:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"a command referencing an ",(0,a.kt)("inlineCode",{parentName:"li"},"image")," component that, when applied, will build the image of the container to deploy, and push it to its registry,"),(0,a.kt)("li",{parentName:"ul"},"a command referencing a ",(0,a.kt)("a",{parentName:"li",href:"https://devfile.io/docs/devfile/2.2.0/user-guide/adding-kubernetes-component-to-a-devfile.html"},(0,a.kt)("inlineCode",{parentName:"a"},"kubernetes")," component")," that, when applied, will create a Kubernetes resource in the cluster.")),(0,a.kt)("p",null,"With the following example ",(0,a.kt)("inlineCode",{parentName:"p"},"devfile.yaml")," file, a container image will be built by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"Dockerfile")," present in the directory,\nthe image will be pushed to its registry and a Kubernetes Deployment will be created in the cluster, using this freshly built image."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'schemaVersion: 2.2.0\n[...]\nvariables:\n  CONTAINER_IMAGE: quay.io/phmartin/myimage\ncommands:\n  - id: build-image\n    apply:\n      component: outerloop-build\n  - id: deployk8s\n    apply:\n      component: outerloop-deploy\n  - id: deploy\n    composite:\n      commands:\n        - build-image\n        - deployk8s\n      group:\n        kind: deploy\n        isDefault: true\ncomponents:\n  - name: outerloop-build\n    image:\n      imageName: "{{CONTAINER_IMAGE}}"\n      dockerfile:\n        uri: ./Dockerfile\n        buildContext: ${PROJECTS_ROOT}\n  - name: outerloop-deploy\n    kubernetes:\n      inlined: |\n        kind: Deployment\n        apiVersion: apps/v1\n        metadata:\n          name: my-component\n        spec:\n          replicas: 1\n          selector:\n            matchLabels:\n              app: node-app\n          template:\n            metadata:\n              labels:\n                app: node-app\n            spec:\n              containers:\n                - name: main\n                  image: {{CONTAINER_IMAGE}}\n')))}m.isMDXComponent=!0}}]);