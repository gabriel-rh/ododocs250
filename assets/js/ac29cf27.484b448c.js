"use strict";(self.webpackChunkodo_dev=self.webpackChunkodo_dev||[]).push([[9071],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return p}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=c(n),p=a,g=m["".concat(l,".").concat(p)]||m[p]||u[p]||r;return n?o.createElement(g,s(s({ref:t},d),{},{components:n})):o.createElement(g,s({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7572:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c},default:function(){return u}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),s=["components"],i={title:"odo storage",sidebar_position:7},l={unversionedId:"command-reference/storage",id:"command-reference/storage",isDocsHomePage:!1,title:"odo storage",description:'odo lets users manage storage volumes attached to the components. A storage volume can be either an ephemeral volume using an emptyDir Kubernetes volume, or a PVC, which is a way for users to "claim" a persistent volume (such as a GCE PersistentDisk or an iSCSI volume) without understanding the details of the particular cloud environment. The persistent storage volume can be used to persist data across restarts and rebuilds of the component.',source:"@site/docs/command-reference/storage.md",sourceDirName:"command-reference",slug:"/command-reference/storage",permalink:"/docs/command-reference/storage",editUrl:"https://github.com/redhat-developer/odo/edit/main/website/docs/command-reference/storage.md",version:"current",sidebarPosition:7,frontMatter:{title:"odo storage",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"odo service",permalink:"/docs/command-reference/service"},next:{title:"Common Flags",permalink:"/docs/command-reference/flags"}},c=[{value:"Adding a storage volume",id:"adding-a-storage-volume",children:[]},{value:"Listing the storage volumes",id:"listing-the-storage-volumes",children:[]},{value:"Deleting a storage volume",id:"deleting-a-storage-volume",children:[]},{value:"Adding storage to specific container",id:"adding-storage-to-specific-container",children:[]}],d={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"odo lets users manage storage volumes attached to the components. A storage volume can be either an ephemeral volume using an ",(0,r.kt)("inlineCode",{parentName:"p"},"emptyDir")," Kubernetes volume, or a ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/storage/volumes/#persistentvolumeclaim"},"PVC"),', which is a way for users to "claim" a persistent volume (such as a GCE PersistentDisk or an iSCSI volume) without understanding the details of the particular cloud environment. The persistent storage volume can be used to persist data across restarts and rebuilds of the component.'),(0,r.kt)("h3",{id:"adding-a-storage-volume"},"Adding a storage volume"),(0,r.kt)("p",null,"We can add a storage volume to the cluster using ",(0,r.kt)("inlineCode",{parentName:"p"},"odo storage create"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"odo storage create\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ odo storage create store --path /data --size 1Gi\n\u2713  Added storage store to nodejs-project-ufyy\n\n$ odo storage create tempdir --path /tmp --size 2Gi --ephemeral\n\u2713  Added storage tempdir to nodejs-project-ufyy\n\n\nPlease use `odo push` command to make the storage accessible to the component\n")),(0,r.kt)("p",null,"In the above example, the first storage volume has been mounted to the ",(0,r.kt)("inlineCode",{parentName:"p"},"/data")," path and has a size of ",(0,r.kt)("inlineCode",{parentName:"p"},"1Gi"),",\nand the second volume has been mounted to ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp")," and is ephemeral."),(0,r.kt)("h3",{id:"listing-the-storage-volumes"},"Listing the storage volumes"),(0,r.kt)("p",null,"We can check the storage volumes currently used by the component using ",(0,r.kt)("inlineCode",{parentName:"p"},"odo storage list"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"odo storage list\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ odo storage list\nThe component 'nodejs-project-ufyy' has the following storage attached:\nNAME      SIZE     PATH      STATE\nstore     1Gi      /data     Not Pushed\ntempdir   2Gi      /tmp      Not Pushed\n")),(0,r.kt)("h3",{id:"deleting-a-storage-volume"},"Deleting a storage volume"),(0,r.kt)("p",null,"We can delete a storage volume using ",(0,r.kt)("inlineCode",{parentName:"p"},"odo storage delete"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"odo storage delete\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ odo storage delete store -f\nDeleted storage store from nodejs-project-ufyy\n\nPlease use `odo push` command to delete the storage from the cluster\n")),(0,r.kt)("p",null,"In the above example, using ",(0,r.kt)("inlineCode",{parentName:"p"},"-f")," forcefully deletes the storage without asking user permission."),(0,r.kt)("h3",{id:"adding-storage-to-specific-container"},"Adding storage to specific container"),(0,r.kt)("p",null,"If your devfile has multiple containers, you can specify to which container you want the\nstorage to attach to using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--container")," flag in the ",(0,r.kt)("inlineCode",{parentName:"p"},"odo storage create")," command."),(0,r.kt)("p",null,"Following is an excerpt from an example devfile with multiple containers :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'components:\n  - name: runtime\n    container:\n      image: registry.access.redhat.com/ubi8/nodejs-12:1-36\n      memoryLimit: 1024Mi\n      endpoints:\n        - name: "3000-tcp"\n          targetPort: 3000\n      mountSources: true\n  - name: funtime\n    container:\n      image: registry.access.redhat.com/ubi8/nodejs-12:1-36\n      memoryLimit: 1024Mi\n')),(0,r.kt)("p",null,"Here, we have two containers - ",(0,r.kt)("inlineCode",{parentName:"p"},"runtime")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"funtime"),". To attach a storage, only to the ",(0,r.kt)("inlineCode",{parentName:"p"},"funtime")," container, we can do"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"odo storage create --container\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ odo storage create store --path /data --size 1Gi --container funtime\n\u2713  Added storage store to nodejs-testing-xnfg\n\nPlease use `odo push` command to make the storage accessible to the component\n")),(0,r.kt)("p",null,"You can list the same, using ",(0,r.kt)("inlineCode",{parentName:"p"},"odo storage list")," command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ odo storage list\nThe component 'nodejs-testing-xnfg' has the following storage attached:\nNAME      SIZE     PATH      CONTAINER     STATE\nstore     1Gi      /data     funtime       Not Pushed\n")))}u.isMDXComponent=!0}}]);