"use strict";(self.webpackChunkodo_dev=self.webpackChunkodo_dev||[]).push([[4528],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return g}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(t),g=o,m=c["".concat(s,".").concat(g)]||c[g]||d[g]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3460:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],l={title:"Debugging using devfile",sidebar_position:6},s={unversionedId:"tutorials/debugging-using-devfile",id:"tutorials/debugging-using-devfile",isDocsHomePage:!1,title:"Debugging using devfile",description:"Debugging a component",source:"@site/docs/tutorials/debugging-using-devfile.md",sourceDirName:"tutorials",slug:"/tutorials/debugging-using-devfile",permalink:"/docs/tutorials/debugging-using-devfile",editUrl:"https://github.com/redhat-developer/odo/edit/main/website/docs/tutorials/debugging-using-devfile.md",version:"current",sidebarPosition:6,frontMatter:{title:"Debugging using devfile",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Using devfile lifecycle events",permalink:"/docs/tutorials/using-devfile-lifecycle-events"},next:{title:"Secure Registry",permalink:"/docs/architecture/secure-registry"}},p=[{value:"Debugging a component",id:"debugging-a-component",children:[]},{value:"Debugging your devfile component via CLI",id:"debugging-your-devfile-component-via-cli",children:[]}],u={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"debugging-a-component"},"Debugging a component"),(0,a.kt)("p",null,"Debugging your component involves port forwarding with the Kubernetes pod. Before you start, it is required that you have a ",(0,a.kt)("inlineCode",{parentName:"p"},"kind: debug")," step located within your ",(0,a.kt)("inlineCode",{parentName:"p"},"devfile.yaml"),"."),(0,a.kt)("p",null,"The following ",(0,a.kt)("inlineCode",{parentName:"p"},"devfile.yaml")," contains a ",(0,a.kt)("inlineCode",{parentName:"p"},"debug")," step under the ",(0,a.kt)("inlineCode",{parentName:"p"},"commands")," key:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"commands:\n  - id: install\n    exec:\n      component: runtime\n      commandLine: npm install\n      workingDir: /project\n      group:\n        kind: build\n        isDefault: true\n  - id: run\n    exec:\n      component: runtime\n      commandLine: npm start\n      workingDir: /project\n      group:\n        kind: run\n        isDefault: true\n  - id: debug\n    exec:\n      component: runtime\n      commandLine: npm run debug\n      workingDir: /project\n      group:\n        kind: debug\n        isDefault: true\n")),(0,a.kt)("h3",{id:"debugging-your-devfile-component-via-cli"},"Debugging your devfile component via CLI"),(0,a.kt)("p",null,"We will use the official ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/odo-devfiles/registry/tree/master/devfiles/nodejs"},"nodejs")," example in our debugging session which includes the necessary ",(0,a.kt)("inlineCode",{parentName:"p"},"debug")," step within ",(0,a.kt)("inlineCode",{parentName:"p"},"devfile.yaml"),"."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Download the example application:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"odo create nodejs --starter nodejs-starter\n")),(0,a.kt)("p",{parentName:"li"},"For example:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ odo create nodejs --starter nodejs-starter\nValidation\n \u2713  Checking devfile existence [11498ns]\n \u2713  Checking devfile compatibility [15714ns]\n \u2713  Creating a devfile component from registry: DefaultDevfileRegistry [17565ns]\n \u2713  Validating devfile component [113876ns]\n\nStarter Project\n \u2713  Downloading starter project nodejs-starter from https://github.com/odo-devfiles/nodejs-ex.git [428ms]\n\nPlease use `odo push` command to create the component with source deployed\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Push with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--debug")," flag which is required for all debugging deployments:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"odo push --debug\n")),(0,a.kt)("p",{parentName:"li"},"For example:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'$ odo push --debug\n\nValidation\n \u2713  Validating the devfile [29916ns]\n\nCreating Kubernetes resources for component nodejs\n \u2713  Waiting for component to start [38ms]\n\nApplying URL changes\n \u2713  URLs are synced with the cluster, no changes are required.\n\nSyncing to component nodejs\n \u2713  Checking file changes for pushing [1ms]\n \u2713  Syncing files to the component [778ms]\n\nExecuting devfile commands for component nodejs\n \u2713  Executing install command "npm install" [2s]\n \u2713  Executing debug command "npm run debug" [1s]\n\nPushing devfile component nodejs\n \u2713  Changes successfully pushed to component\n\n')),(0,a.kt)("p",{parentName:"li"},"NOTE: A custom debug command may be chosen via the ",(0,a.kt)("inlineCode",{parentName:"p"},'--debug-command="custom-step"')," flag.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Port forward to the local port in order to access the debugging interface:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"odo debug port-forward\n")),(0,a.kt)("p",{parentName:"li"},"For example:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ odo debug port-forward\nStarted port forwarding at ports - 5858:5858\n")),(0,a.kt)("p",{parentName:"li"},"NOTE: A specific port may be specified using the ",(0,a.kt)("inlineCode",{parentName:"p"},"--local-port")," flag")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Open a separate terminal window and check if the debug session is running."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"odo debug info\n")),(0,a.kt)("p",{parentName:"li"},"For example:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ odo debug info\nDebug is running for the component on the local port : 5858\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Accessing the debugger:\nThe debugger is accessible through an assortment of tools. An example of setting up a debug interface would be through ",(0,a.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_remote-debugging"},"VSCode's debugging interface"),"."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "node",\n  "request": "attach",\n  "name": "Attach to remote",\n  "address": "TCP/IP address of process to be debugged",\n  "port": 5858\n}\n')))))}d.isMDXComponent=!0}}]);